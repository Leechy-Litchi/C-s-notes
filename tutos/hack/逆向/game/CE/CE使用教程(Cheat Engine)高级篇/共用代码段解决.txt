https://www.bilibili.com/video/BV1f54y1i71W?p=6  8分钟后左右
通常出现，当你的脚本或者手动将一个函数nop掉后，出现你和怪的HP都不会减等情况，就是共用代码段
需要对着此地址自动汇编（代码注入）

然后找出你、怪的体力
会发现，因为是共用的，所以汇编代码一样、偏移一样，但是寄存器内的地址不一样
相当于同一个函数传入了不同的值，虽然代码一样，但是修改的不一样

在内存浏览器内的工具菜单中有分析数据/结构的功能
将你的地址输入进去（无偏移的），然后根据偏移（偏移的单位是字节，而且是16进制，要转换）给出一个大致的结构大小，它就能显示这段内存，可以大致分析出结构体

在文件菜单中点击添加额外地址可以将怪的地址导入，便于分析差异
而后在结构菜单中定义新的结构可以命名，方便后续进行

如果只有敌方和友方，可以找1、2和0、1，如果势力多，需要细找

而后可以在注入的代码内将地址+偏移内的值进行判断


除此之外，还有加减共用，数值同增减，举例，法力不减后法力不增了
一般会有fadd/add 一个地址，地址内的值可能为正或负
这时候可以
cmp 这个地址,0  
jle originalcode
