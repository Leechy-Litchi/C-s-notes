有了基址，但是最终的地址不断变化（比如切换关卡）
每一次变化都是由一定规律的
查找访问，假如有edi+5578，每次传进来的edi不一样，从而切换
可以想到，将变化后的edi传入来获得地址
需要注意，如果是查找什么改写了，那么只会在改写时调用，如果查找访问则基本可以实时调用

在内存浏览器->视图->内存区域
参数说明，保护即权限，比如读、写、执行、无法访问

push eax
lea eax,[edi+5578]
mov [可读写内存地址].eax
pop eax

一般选取线程内可读写内存段，这里一般是空的，选择一块作为“人造指针”
非可读写也可以使用
CE中有个函数fullaccess(选取的地址,字节数)，可以修改此地址往后一段的权限为读写，要注意，有时候可能会有其它形式的保护导致无法修改，尽量选取可读写内存段


又或者使用新分配地址
alloc(point,4)
registersymbol(point)
//为你分配的内存空间取一个可以全局调用的名称，这个名称除了在自动汇编这个脚本内使用外，还能在类似于手动添加地址的外部操作中使用。也即全局可用
//而后添加地址可以直接用point
//label只是个标签，并不代表地址，而且不是全局可用

适用于超多级指针或者无法找到的情况（自动查找也不能的情况）