一般的数据都是由32位的二进制数字记录的，而32位数字中有一位记录正负，另外31位记录数值，31位二进制最大为2147483647。我的世界用的是另一种数据类型，它只有16位，一位正负，15位数值，也就是最大32647。

Int16  意思是16位整数(16bit integer)，相当于short  占2个字节   -32768 ~ 32767

Int32  意思是32位整数(32bit integer), 相当于 int      占4个字节   -2147483648 ~ 2147483647

Int64  意思是64位整数(64bit interger), 相当于 long long   占8个字节   -9223372036854775808 ~ 9223372036854775807

Byte  相当于byte(unsigned char)   0 ~ 255

WORD 等于  unsigned short     0 ~ 65535

int32 为什么是7FFFFFFF
计算机里最高位是符号位。0是正，为1负。所以最高位是不可以参加计算的

比如二进制数1000最高位是符号位的话，转十进制不是8，而是-0，（正0的二进制形式是0000）。

所以，k位的二进制整数可以表示的状态共2^k种，所以，有2^(k-1)个，而int型占4个字节，有32位，所以有2^31-1个，即2147483647。-2,147,483,648，即十六进制 0x80000000.

所以，7FFFFFFF的最高位7二进制为0111中的0，为正数，如果变为8即1000则成为负数，由此也可以推出正值取反+1即为其负数




mod（模）为当前数位的最大值
比如4位（4bit）最大值为10000 也就是2^n
而每个数都有一个互补的数
比如3在这里互补的数位mod-3即13
同时也是3的补码（反码+1）
原   0011
反   1100
补   1101  =13
（此处没有考虑符号位，即无符号位计算）
