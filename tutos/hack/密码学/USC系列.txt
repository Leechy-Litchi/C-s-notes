UTF-8（8-bit Unicode Transformation Format）是一种针对Unicode的可变长度字符编码，也是一种前缀码。它可以用来表示Unicode标准中的任何字符，且其编码中的第一个字节仍与ASCII兼容，这使得原来处理ASCII字符的软件无须或只须做少部分修改，即可继续使用。

和 UTF-16 和 UTF-32 不同，UTF-8 采用了特别的编码规则，因此不存在「大端序」和「小端序」的差异。
BOM（Byte Order Mark），是用来判断字节顺序的（大小端），但网络通信一般不用

Unicode规范中定义，每一个文件的最前面分别加入一个表示编码顺序的字符，这个字符的名字叫做”零宽度非换行空格“（ZERO WIDTH NO-BREAK SPACE）又被称作 BOM，用FEFF表示。这正好是两个字节，而且FF比FE大1。
如果一个文本文件的头两个字节是FE FF，就表示该文件采用大端方式；如果头两个字节是FF FE，就表示该文件采用小端方式。

Windows 系统记事本里的「Unicode 编码」实际上是「带有 BOM 的小端序 UTF-16」。这意味着 Windows 将 Unicode 字符集和 UTF-16 划上了等号。这实际是不对的。

UTF8变字节码元，一个字一般使用1到4个字节编码，当然也可以更长
UTF16双字节码元，每字1码元，2字节
UTF32四字节码元，每字1码元，4字节



UTF-8编码最短的为一个字节、最长的目前为四个字节，从首字节就可以判断一个UTF-8编码有几个字节：
    如果首字节以0开头，肯定是单字节编码(即单个单字节码元)；
    如果首字节以110开头，肯定是双字节编码(即由两个单字节码元所组成的双码元序列)；
    如果首字节以1110开头，肯定是三字节编码(即由三个单字节码元所组成的三码元序列)，以此类推。

单字节可编码的Unicode码点值范围十六进制为0x0000 ~ 0x007F，十进制为0 ~ 127；
双字节可编码的Unicode码点值范围十六进制为0x0080 ~ 0x07FF，十进制为128 ~ 2047；
三字节可编码的Unicode码点值范围十六进制为0x0800 ~ 0xFFFF，十进制为2048 ~ 65535；
四字节可编码的Unicode码点值范围十六进制为0x10000 ~ 0x1FFFFF，十进制为65536 ~ 2097151
（目前Unicode字符集码点编号的最大值为0x10FFFF，实际尚未编号到0x1FFFFF；这说明作为变长字节数的UTF-8编码其未来扩展性非常强，即便目前的四字节编码也还有大量编码空间未被使用，更不论还可扩展为五字节、六字节……）

GB2312是采用大端方式存储的。
Unicode：编码是四个字节“FF FE 25 4E”，其中“FF FE”表明是小端方式存储，真正的编码是4E25。
Unicode big endian：编码是四个字节“FE FF 4E 25”，其中“FE FF”表明是大端方式存储。
UTF-8：编码是六个字节“EF BB BF”，三个字节“EF BB BF”表示这是UTF-8编码，具体编码的存储顺序与编码顺序是一致的。