获取数据表的完整结构。

SHOW CREATE TABLE runoob_tbl \G;

       Table: runoob_tbl
Create Table: CREATE TABLE `runoob_tbl` (
  `runoob_id` int(11) NOT NULL auto_increment,
  `runoob_title` varchar(100) NOT NULL default '',
  `runoob_author` varchar(40) NOT NULL default '',
  `submission_date` date default NULL,
  PRIMARY KEY  (`runoob_id`),
  UNIQUE KEY `AUTHOR_INDEX` (`runoob_author`)
) ENGINE=InnoDB 
1 row in set (0.00 sec)


修改SQL语句的数据表名，并执行SQL语句。

CREATE TABLE `clone_tbl` (
   `runoob_id` int(11) NOT NULL auto_increment,
   `runoob_title` varchar(100) NOT NULL default '',
   `runoob_author` varchar(40) NOT NULL default '',
   `submission_date` date default NULL,
   PRIMARY KEY  (`runoob_id`),
   UNIQUE KEY `AUTHOR_INDEX` (`runoob_author`)
 ) ENGINE=InnoDB;


INSERT INTO... SELECT 语句来实现。

INSERT INTO clone_tbl (runoob_id,
                       runoob_title,
                       runoob_author,
                       submission_date)
 SELECT runoob_id,runoob_title,
        runoob_author,submission_date
 FROM runoob_tbl;



另一种完整复制表的方法:

CREATE TABLE targetTable LIKE sourceTable;
INSERT INTO targetTable SELECT * FROM sourceTable;


可以拷贝一个表中其中的一些字段:

CREATE TABLE newadmin AS
(
    SELECT username, password FROM admin
)


将新建的表的字段改名:

CREATE TABLE newadmin AS
(  
    SELECT id, username AS uname, password AS pass FROM admin
)


拷贝一部分数据:
CREATE TABLE newadmin AS
(
    SELECT * FROM admin WHERE LEFT(username,1) = 's'
)


在创建表的同时定义表中的字段信息:
CREATE TABLE newadmin
(
    id INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY
)
AS
(
    SELECT * FROM admin
)  


只复制表结构到新表

create table 新表 select * from 旧表 where 1=2