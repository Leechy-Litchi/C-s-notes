先明确几个概念：

数组指针：形如 char (*c)[10];这样的声明，c是一个指向包含10个字符型元素的数组的指针，即指向数组首元素地址的指针； 

指针数组：形如 char   *c[10];这样的声明，c是一个具有10个元素的数组，每个元素的类型是一个指向char的指针，即数组中每个元素都是一个指针；也称为Iliffe向量；

数组的数组：即二维数组，例如 char c[10][10];

指针的指针：即二级指针，例如 char **c;



在锯齿状数组上使用指针可以节省空间：

如果声明一个字符串指针数组，并根据需要为这些字符串分配内存，将会大大节省资源，因为它左右端长度不以所以叫“锯齿状数组”。

char carrot[50][256];  用于存储50个字符串，浪费空间。

可改为指针数组：

char  *turnip[50];

charmy_string[ ] = "your message here";

turnip[i] =&my_string[0]; 