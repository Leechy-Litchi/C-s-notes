https://www.bilibili.com/video/BV1aW4y1m73B

py源码->词法分析->(Token)语法分析->(语法树)AST生成器->(AST)AST优化器->(优化的AST)字节码生成器->(字节码)产物（code object）
python -m tokenize .\1.py
输出语义分析的结果


print(ast.dump(ast.parse(open('1.py').read()),indent=4))
输出ast语法树解析后结果
输出语法树解析后结果

python -m dis .\1.py
打印字节码（编译出的中间代码）
编译过程是通过遍历语法树得出的，比较复杂


常见误区，解释性语言没有编译

所谓广义的编译
是指从一种语言到另外一种语言的转变
因此，中间代码生成并逐行解释，其中生成中间代码的过程就是编译

解释性语言不一定只有解释器！
解释器不需要中间产物，但是可以解释中间代码
像是python操作文件其实是由解释器操作而不是结果程序操作